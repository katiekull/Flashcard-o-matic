{"ast":null,"code":"var _jsxFileName = \"/Users/katiekull/Assessments/Flashcard-o-matic/Flashcards/src/Layout/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { listDecks } from \"../utils/api/index\";\nimport DeckList from \"./Decks/DeckList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home(_ref) {\n  _s();\n\n  let {\n    updateDecks,\n    deckLength\n  } = _ref;\n  const [decks, setDecks] = useState([]);\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    async function getDeck() {\n      try {\n        const getDeckFromAPI = await listDecks(abortController.signal);\n        setDecks(() => getDeckFromAPI);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    getDeck();\n    return () => abortController.abort();\n  }, [deckLength]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mx-auto\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/decks/new\",\n        className: \"btn btn-secondary w-25 mb-3\",\n        children: \"Create Deck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row w-100 mx-auto\",\n      children: decks.map(deck => /*#__PURE__*/_jsxDEV(DeckList, {\n        deck: deck,\n        updateDecks: updateDecks\n      }, deck.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"f+alwG6Mds7XNzaPIkXWhs/xDB4=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/katiekull/Assessments/Flashcard-o-matic/Flashcards/src/Layout/Home.js"],"names":["React","useState","useEffect","Link","listDecks","DeckList","Home","updateDecks","deckLength","decks","setDecks","abortController","AbortController","getDeck","getDeckFromAPI","signal","error","console","log","abort","map","deck","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,SAAR,QAAwB,oBAAxB;AACA,OAAOC,QAAP,MAAqB,kBAArB;;;AAEA,SAASC,IAAT,OAAyC;AAAA;;AAAA,MAA3B;AAACC,IAAAA,WAAD;AAAcC,IAAAA;AAAd,GAA2B;AACrC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,eAAe,GAAG,IAAIC,eAAJ,EAAxB;;AACA,mBAAeC,OAAf,GAAyB;AACvB,UAAI;AACF,cAAMC,cAAc,GAAG,MAAMV,SAAS,CAACO,eAAe,CAACI,MAAjB,CAAtC;AACAL,QAAAA,QAAQ,CAAC,MAAMI,cAAP,CAAR;AACD,OAHD,CAGE,OAAOE,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF;;AACDH,IAAAA,OAAO;AACP,WAAO,MAAMF,eAAe,CAACQ,KAAhB,EAAb;AACD,GAZQ,EAYP,CAACX,UAAD,CAZO,CAAT;AAcF,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,YAAT;AAAsB,QAAA,SAAS,EAAC,6BAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,gBACGC,KAAK,CAACW,GAAN,CAAWC,IAAD,iBACT,QAAC,QAAD;AAAwB,QAAA,IAAI,EAAEA,IAA9B;AAAoC,QAAA,WAAW,EAAEd;AAAjD,SAAec,IAAI,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GA9BQhB,I;;KAAAA,I;AAgCT,eAAeA,IAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {listDecks} from \"../utils/api/index\";\nimport DeckList from \"./Decks/DeckList\";\n\nfunction Home({updateDecks, deckLength}) {\n    const [decks, setDecks] = useState([]);\n    useEffect(() => {\n      const abortController = new AbortController();\n      async function getDeck() {\n        try {\n          const getDeckFromAPI = await listDecks(abortController.signal);\n          setDecks(() => getDeckFromAPI);\n        } catch (error) {\n          console.log(error)\n        }\n      }\n      getDeck();\n      return () => abortController.abort();\n    },[deckLength]);\n  \n  return (\n    <div>\n      <div className=\"row mx-auto\">\n        <Link to=\"/decks/new\" className=\"btn btn-secondary w-25 mb-3\">\n         Create Deck\n        </Link>\n      </div>\n      <div className=\"row w-100 mx-auto\">\n        {decks.map((deck) => (\n          <DeckList key={deck.id} deck={deck} updateDecks={updateDecks}/>\n        ))}\n      </div>  \n    </div>  \n  )\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}