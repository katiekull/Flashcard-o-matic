{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useParams, useHistory, useRouteMatch } from \"react-router-dom\";\nimport { deleteCard, readDeck, deleteDeck } from \"../../utils/api/index\";\n\nfunction Deck() {\n  _s();\n\n  const [deck, setDeck] = useState([]);\n  const {\n    deckId\n  } = useParams();\n  const history = useHistory();\n  const {\n    url\n  } = useRouteMatch();\n  const {\n    id,\n    name,\n    description,\n    cards\n  } = deck;\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    const deckInfo = async () => {\n      const response = await readDeck(deckId, abortController.signal);\n      setDeck(() => response);\n    };\n\n    deckInfo();\n    return () => abortController.abort();\n  }, [deckId]);\n}\n\n_s(Deck, \"om4xrgptsCtZxlOAvE1Foh1vpcE=\", false, function () {\n  return [useParams, useHistory, useRouteMatch];\n});\n\n_c = Deck;\nexport default Deck;\n\nvar _c;\n\n$RefreshReg$(_c, \"Deck\");","map":{"version":3,"sources":["/Users/katiekull/Assessments/Flashcard-o-matic/Flashcards/src/Layout/Decks/Deck.js"],"names":["React","useEffect","useState","Link","useParams","useHistory","useRouteMatch","deleteCard","readDeck","deleteDeck","Deck","deck","setDeck","deckId","history","url","id","name","description","cards","abortController","AbortController","deckInfo","response","signal","abort"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,IAAR,EAAcC,SAAd,EAAyBC,UAAzB,EAAqCC,aAArC,QAAyD,kBAAzD;AACA,SAAQC,UAAR,EAAoBC,QAApB,EAA8BC,UAA9B,QAA+C,uBAA/C;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACd,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAACW,IAAAA;AAAD,MAAWT,SAAS,EAA1B;AACA,QAAMU,OAAO,GAAGT,UAAU,EAA1B;AACA,QAAM;AAACU,IAAAA;AAAD,MAAQT,aAAa,EAA3B;AACA,QAAM;AAACU,IAAAA,EAAD;AAAKC,IAAAA,IAAL;AAAWC,IAAAA,WAAX;AAAwBC,IAAAA;AAAxB,MAAiCR,IAAvC;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMmB,eAAe,GAAG,IAAIC,eAAJ,EAAxB;;AACA,UAAMC,QAAQ,GAAG,YAAW;AACxB,YAAMC,QAAQ,GAAG,MAAMf,QAAQ,CAACK,MAAD,EAASO,eAAe,CAACI,MAAzB,CAA/B;AACAZ,MAAAA,OAAO,CAAC,MAAMW,QAAP,CAAP;AACH,KAHD;;AAIAD,IAAAA,QAAQ;AACR,WAAM,MAAMF,eAAe,CAACK,KAAhB,EAAZ;AACH,GARQ,EAQP,CAACZ,MAAD,CARO,CAAT;AAWD;;GAlBQH,I;UAEUN,S,EACDC,U,EACFC,a;;;KAJPI,I;AAoBT,eAAeA,IAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {Link, useParams, useHistory, useRouteMatch} from \"react-router-dom\";\nimport {deleteCard, readDeck, deleteDeck} from \"../../utils/api/index\";\n\nfunction Deck() {\n  const [deck, setDeck] = useState([]);\n  const {deckId} = useParams();\n  const history = useHistory();\n  const {url} = useRouteMatch();\n  const {id, name, description, cards} = deck;\n\n  useEffect(() => {\n      const abortController = new AbortController();\n      const deckInfo = async() => {\n          const response = await readDeck(deckId, abortController.signal);\n          setDeck(() => response);\n      };\n      deckInfo();\n      return() => abortController.abort();\n  },[deckId]);\n\n  \n}\n\nexport default Deck;"]},"metadata":{},"sourceType":"module"}